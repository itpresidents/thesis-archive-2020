{"version":3,"sources":["config.js","util/api.ts","util/vector.ts","components/DragableCards.tsx","Home.tsx","util/queries.ts","VimeoEmbed.tsx","Student.tsx","components/StudentCards.tsx","Topic.tsx","components/HeaderBG.tsx","components/Header.tsx","Video.tsx","Videos.tsx","App.tsx","serviceWorker.ts","index.tsx","images/20.svg"],"names":["apis","api","getAllStudents","getApi","getStudent","studentId","config","fake2018Api","realApi","baseApiUrl","a","axios","get","data","scaleVector","b","StudentCard","student","DragableCards","students","useState","canvasHeight","setState","useSpring","pos","set","bind","useDrag","down","xy","movement","velocity","direction","console","log","map","e","i","decay","initial","getValue","bounds","left","window","innerWidth","right","top","innerHeight","bottom","rubberband","useEffect","canvasH","document","getElementById","clientHeight","id","div","style","transform","to","x","y","key","student_slug","Home","topics","className","getStudentIdFromSlug","studentSlug","studentWithSlug","filter","length","Error","student_id","getVideoIdFromUrl","url","urlParts","split","VimeoEmbed","vimeoVideoId","src","title","width","height","frameBorder","allow","allowFullScreen","createMarkup","html","__html","StudentDetails","student_name","project_title","featured_image","image","alt","dangerouslySetInnerHTML","project_question","advisor_name","topic","slug","name","video_presentation_url","slide_show","slide","caption","further_reading","Student","setProject","fetchStudent","StudentByIdOrSlug","studentIdOrSlug","isNaN","redirectTo","Card","portfolio_icon","Img","variant","ImgOverlay","Title","Text","StudentCards","CardColumns","StudentCardsRandomizer","shuffledStudents","setShuffledStudents","toShuffle","temporaryValue","randomIndex","arrayClone","slice","currentIndex","Math","floor","random","shuffle","Topic","topicSlug","studentsWithTopic","some","topicName","HeaderBG","svg20","Header","Navbar","Brand","Nav","fill","Item","VideoDetail","Video","setStudent","VideoCell","activeSlug","Col","md","cx","videoScheduleRows","schedule","Schedule","Row","row","time","tuesday","wednesday","thursday","friday","Videos","VideosContainer","setActiveSlug","setStudentId","randomStudent","elements","fetchStudentId","App","result","queries","path","AppContainer","setStudents","fetchAllStudents","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.78ea604a.chunk.js","sourcesContent":["// should be either\n\nexport const apis = {\n  FAKE_FROM_2018: \"FAKE_FROM_2018\",\n  REAL: \"REAL\",\n};\n\nexport const api = apis.FAKE_FROM_2018;\n","import axios from \"axios\";\nimport * as config from \"../config\";\nimport { IStudentApi, IStudentDetails, IStudentSummary } from \"../types\";\n\nexport const getAllStudents = () => getApi().getAllStudents();\nexport const getStudent = (studentId: string) => getApi().getStudent(studentId);\n\nconst getApi = (): IStudentApi => {\n  if (config.api === config.apis.FAKE_FROM_2018) {\n    return fake2018Api;\n  } else {\n    return realApi;\n  }\n};\n\nconst baseApiUrl =\n  \"https://itp.nyu.edu/thesis2018/wp-content/themes/itpthesis/api.php\";\n\nconst realApi: IStudentApi = {\n  getAllStudents: async () =>\n    (await axios.get(`${baseApiUrl}?student_id=-1`)).data as IStudentSummary[],\n  getStudent: async (studentId: string) =>\n    (await axios.get(`${baseApiUrl}?student_id=${studentId}`))\n      .data as IStudentDetails,\n};\n\nconst fake2018Api: IStudentApi = {\n  getAllStudents: async () =>\n    (await axios.get(\"/2018/all.json\")).data as IStudentSummary[],\n  getStudent: async (studentId) =>\n    (await axios.get(`/2018/${studentId}.json`)).data as IStudentDetails,\n};\n\n// sample json for students:\n// {\n//   student_id: \"40\",\n//   student_name: \"Akmyrat Tuyliyev\",\n//   student_slug: \"akmyrat-tuyliyev\",\n//   advisor_id: \"119\",\n//   project_title: \"Erteki: Storytelling by Children\",\n//   project_question: \"<i>Erteki</i> means fairy tale in Turkmen. Fairy tales\n//   are stories that were told to children as a way to teach in indirect,\n//   fanciful and metaphorical ways how to grow up in their culture. But in the\n//   21st century, mass media entertainment has become the primary source for\n//   children’s development and how they perceive the world. <br /> <br />\n//   Unfortunately, there has been a significant lack of representation of\n//   marginalized communities in the mainstream media for decades. Increasingly\n//   people are speaking out about not seeing a representation of themselves on\n//   television or in movies when growing up. As a Turkmen filmmaker and a new\n//   media artist, this issue was undoubtedly part of my own childhood. I found\n//   it troubling to see that the problems are presently stressed via\n//   conversation, but not much is done to solve them. For my thesis, I had to\n//   ask myself: is it possible to create a narrative experience that tells a\n//   unique and meaningful story to every individual user, tailored to their\n//   culture? <br /> <br /> I decided to start with a culture I know best, my\n//   own. I reached out to the small Turkmen community in NYC and found many\n//   Turkmen-American children, who are in the midst of developing their\n//   identity. After my research with children, I realized that I had to put\n//   media in children’s hands, and give them a voice to represent their own\n//   stories and experiences. I developed an immersive installation\n//   <i>Erteki</i>, which listens to children’s stories and illustrates them\n//   live, using speech recognition, machine learning and projection.\n//   <i>Erteki</i>, or fairy tale, is designed to make stories and characters\n//   come to life in a magical experience. By providing a platform that empowers\n//   children with authorship over their own narratives, I hope that they grow\n//   up feeling included and visible. \", short_description: \"<i>Erteki</i> is an\n//   immersive space for children from marginalized communities to tell their\n//   stories and experience their narratives coming alive.\", portfolio_icon: {\n//   src:\n//   \"https://itp.nyu.edu/thesis2018/wp-content/uploads/2018/04/baby_thumbnail.png\",\n//   title: \"Erteki Thumbnail\",\n//   alt: \"A baby boy looking into a bright screen\",\n//   caption: \"Erteki thumbnail\"\n//   },\n//   topics: [\n//   {\n//   name: \"Identity\",\n//   slug: \"identity\"\n//   },\n//   {\n//   name: \"Narrative\",\n//   slug: \"narrative\"\n//   }\n//   ]\n//   },\n","export const addVector = (a: Array<number>, b: Array<number>): any => {\n  return a.map((e, i) => e + b[i]);\n};\n\nexport const scaleVector = (a: Array<number>, b: number): any => {\n  return [a[0] * b, a[1] * b];\n};\n\nexport const clamp = (num: number, min: number, max: number) => {\n  return Math.min(Math.max(num, min), max);\n}\n\nexport const clampVector = (a: Array<number>, min: Array<number>, max: Array<number>) => {\n  return a.map((e, i) => clamp(e, min[i], max[i]));\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { Link, RouteComponentProps } from \"@reach/router\";\nimport { IStudentSummary } from \"../types\";\nimport { useSpring, animated, to, config } from \"react-spring\";\nimport { useDrag } from \"react-use-gesture\";\nimport { addVector, scaleVector, clampVector } from \"../util/vector\";\nimport Student from \"../Student\";\n\ninterface IStudentsProps extends RouteComponentProps {\n  students?: IStudentSummary[];\n}\n\nconst DragableCards = ({ students }: IStudentsProps) => {\n\n  const [{ canvasHeight }, setState] = useState({ canvasHeight: 3000 });\n  const canvasWidth = 3000;\n  const [{ pos }, set] = useSpring(() => ({ pos: [-canvasWidth / 3, 0] }));\n  const bind = useDrag(\n    ({ down, movement: xy, velocity, direction }) => {\n      console.log(xy);\n      set({\n        pos: addVector(xy, scaleVector(direction, velocity * 100)),\n        config: { velocity: scaleVector(direction, velocity * 10000), decay: false },\n      });\n    },\n    {\n      initial: () => pos.getValue() as any,\n      bounds: { left: -canvasWidth + window.innerWidth * 0.8, right: 200, top: -canvasHeight + window.innerHeight * 0.8, bottom: 200 },\n      rubberband: true\n    }\n  );\n  useEffect(() => {\n    const canvasH = document.getElementById('projects-canvas')!.clientHeight;\n    setState({ canvasHeight: canvasH });\n  }, [])\n\n\n  return (\n    <>\n      <div id=\"canvas-invisible-height\" />\n      <div id=\"canvas-container\">\n        <animated.div\n          {...bind()}\n          id=\"projects-canvas\"\n          style={{\n            transform: to([pos], ([x, y]) => `translate3d(${x}px,${y}px,0)`),\n          }}\n        >\n          {students &&\n            students.map((student) => (\n              <StudentCard key={student.student_slug} student={student} />\n            ))}\n        </animated.div>\n      </div>\n    </>\n  );\n};\n\nconst StudentCard = ({ student }: { student: IStudentSummary }) => (\n  // <Link to={`/students/${student.student_id}`}>\n  <div\n    className=\"project-card shadow\"\n    style={{ backgroundImage: `url(${student.portfolio_icon.src})` }}\n  >\n    {/* <Card.ImgOverlay>\n                    <Card.Title>{student.student_name}</Card.Title>\n                    <Card.Text>{student.project_title}</Card.Text>\n                </Card.ImgOverlay> */}\n  </div>\n  // </Link >\n);\n\nexport default DragableCards;\n","import React from \"react\";\nimport StudentCards from \"./components/StudentCards\";\nimport Topics from \"./Topics\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport { IStudentSummary, TopicDict } from \"./types\";\nimport DragableCards from \"./components/DragableCards\";\n\ninterface IHomeProps extends RouteComponentProps {\n  students: IStudentSummary[] | undefined;\n  topics: TopicDict;\n}\n\nconst Home = ({ students, topics }: IHomeProps) => {\n  if (!students) return <h2>loading...</h2>;\n\n  return (\n    <div>\n      <div className=\"row\">\n        {/* <StudentCards students={students} /> */}\n        <DragableCards students={students} />\n      </div>\n      {/* let's find another place for topics */}\n      {/* <div className=\"row\">\n        <Topics topics={topics} />\n      </div> */}\n    </div>\n  );\n};\n\nexport default Home;\n","// {\"name\":\"Performance\",\"slug\":\"performance\"},{\"name\":\"Society\",\"slug\":\"society\"}]\nimport { IStudentSummary, TopicDict } from \"../types\";\n\nexport const getTopics = (students: IStudentSummary[]): TopicDict => {\n  const result: TopicDict = {};\n\n  for (let { topics } of students) {\n    for (let topic of topics) {\n      const { slug, name } = topic;\n      if (!result[slug]) {\n        result[slug] = name;\n      }\n    }\n  }\n\n  return result;\n};\n\nexport const getStudentIdFromSlug = (\n  students: IStudentSummary[],\n  studentSlug: string\n): string => {\n  const studentWithSlug = students.filter(\n    ({ student_slug }) => student_slug === studentSlug\n  );\n\n  if (studentWithSlug.length === 0)\n    throw new Error(`invalid student slug of ${studentSlug}`);\n\n  return studentWithSlug[0].student_id;\n};\n\nexport const getVideoIdFromUrl = (url: string) => {\n  const urlParts = url.split(\"/\");\n\n  return urlParts[urlParts.length - 1];\n};\n\nexport const isNumber = (stringValue: string): boolean => !isNaN(+stringValue);\n\nexport function selectRandom<T>(elements: T[]): T {\n  const randomIndex = Math.floor(Math.random() * elements.length);\n\n  return elements[randomIndex];\n}\n\nexport function shuffle<T>(toShuffle: T[]): T[] {\n  // clone\n  const arrayClone = toShuffle.slice();\n  let currentIndex = arrayClone.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = arrayClone[currentIndex];\n    arrayClone[currentIndex] = arrayClone[randomIndex];\n    arrayClone[randomIndex] = temporaryValue;\n  }\n\n  return arrayClone;\n}\n","import React from \"react\";\n\nconst VimeoEmbed = ({ vimeoVideoId }: { vimeoVideoId: string }) => (\n  <iframe\n    src={`https://player.vimeo.com/video/${vimeoVideoId}`}\n    title=\"vimeo\"\n    width=\"640\"\n    height=\"360\"\n    frameBorder=\"0\"\n    allow=\"autoplay; fullscreen\"\n    allowFullScreen\n  ></iframe>\n);\n\nexport default VimeoEmbed;\n","import React, { useEffect, useState } from \"react\";\n\nimport * as api from \"./util/api\";\nimport { IStudentDetails, IStudentSummary } from \"./types\";\nimport { Link, RouteComponentProps, redirectTo } from \"@reach/router\";\nimport {\n  getStudentIdFromSlug,\n  getVideoIdFromUrl,\n  isNumber,\n} from \"./util/queries\";\nimport VimeoEmbed from \"./VimeoEmbed\";\n\nconst createMarkup = (html: string) => ({ __html: html });\n\ninterface IStudentDetailsProps {\n  student: IStudentDetails;\n}\n\nconst StudentDetails = ({ student }: IStudentDetailsProps) => {\n  return (\n    <div>\n      <h2>\n        {student.student_name} - {student.project_title}\n      </h2>\n      {student.featured_image.map((image) => (\n        <img\n          key={image.src}\n          src={image.src}\n          alt={image.alt}\n          title={image.title}\n        ></img>\n      ))}\n\n      <div\n        dangerouslySetInnerHTML={createMarkup(student.project_question)}\n      ></div>\n      <ul>\n        <li>Advisor: {student.advisor_name}</li>\n        <li>\n          Topics:\n          <ul>\n            {student.topics.map((topic) => (\n              <li key={topic.slug}>\n                <Link to={`/topics/${topic.slug}`}>{topic.name}</Link>\n              </li>\n            ))}\n          </ul>\n        </li>\n      </ul>\n      <VimeoEmbed\n        vimeoVideoId={getVideoIdFromUrl(student.video_presentation_url)}\n      />\n      <h3>Slide show:</h3>\n      <ul>\n        {student.slide_show.map((slide) => (\n          <figure key={slide.src}>\n            <img src={slide.src} alt={slide.alt} title={slide.title}></img>\n            <figcaption>{slide.caption}</figcaption>\n          </figure>\n        ))}\n      </ul>\n      <h3>Further Reading:</h3>\n      <div\n        dangerouslySetInnerHTML={createMarkup(student.further_reading)}\n      ></div>\n    </div>\n  );\n};\n\ninterface IStudentProps extends RouteComponentProps {\n  studentId: string;\n}\n\nconst Student = ({ studentId }: IStudentProps) => {\n  const [student, setProject] = useState<IStudentDetails>();\n\n  useEffect(() => {\n    async function fetchStudent() {\n      const student = await api.getStudent(studentId);\n      setProject(student);\n    }\n    fetchStudent();\n  }, [studentId]);\n\n  if (!student) return <div>Loading...</div>;\n\n  return <StudentDetails student={student} />;\n};\n\ninterface IStudentByIdOrSlugProps extends RouteComponentProps {\n  studentIdOrSlug?: string;\n  students: IStudentSummary[] | undefined;\n}\n\nconst StudentByIdOrSlug = ({\n  studentIdOrSlug,\n  students,\n}: IStudentByIdOrSlugProps) => {\n  if (!studentIdOrSlug) return null;\n\n  if (isNumber(studentIdOrSlug)) {\n    return <Student studentId={studentIdOrSlug} />;\n  }\n\n  if (!students) return null;\n\n  const studentId = getStudentIdFromSlug(students, studentIdOrSlug);\n\n  redirectTo(`/students/${studentId}`);\n\n  return null;\n};\n\nexport default StudentByIdOrSlug;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, RouteComponentProps } from \"@reach/router\";\nimport { IStudentSummary } from \"../types\";\nimport { Card, CardColumns } from \"react-bootstrap\";\nimport { shuffle } from \"../util/queries\";\n\ninterface IStudentsProps extends RouteComponentProps {\n  students?: IStudentSummary[];\n}\n\nconst StudentCard = ({ student }: { student: IStudentSummary }) => (\n  <Card>\n    <Link to={`/students/${student.student_id}`}>\n      {student.portfolio_icon && (\n        <Card.Img\n          variant=\"top\"\n          src={student.portfolio_icon.src}\n          alt={student.portfolio_icon.alt}\n        ></Card.Img>\n      )}\n      <Card.ImgOverlay>\n        <Card.Title>{student.student_name}</Card.Title>\n        <Card.Text>{student.project_title}</Card.Text>\n      </Card.ImgOverlay>\n    </Link>\n  </Card>\n);\n\nconst StudentCards = ({ students }: IStudentsProps) => (\n  <CardColumns>\n    {students &&\n      students.map((student) => (\n        <StudentCard key={student.student_slug} student={student} />\n      ))}\n  </CardColumns>\n);\n\nconst StudentCardsRandomizer = ({ students }: IStudentsProps) => {\n  const [shuffledStudents, setShuffledStudents] = useState<IStudentSummary[]>();\n\n  useEffect(() => {\n    if (!shuffledStudents && students) {\n      setShuffledStudents(shuffle(students));\n    }\n  }, [students, shuffledStudents]);\n\n  return <StudentCards students={shuffledStudents} />;\n};\n\nexport default StudentCardsRandomizer;\n","import React from \"react\";\nimport StudentCards from \"./components/StudentCards\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport { IStudentSummary, TopicDict } from \"./types\";\n\ninterface ITopicProps extends RouteComponentProps {\n  students: IStudentSummary[] | undefined;\n  topics: TopicDict;\n  topicSlug?: string;\n}\n\nconst Topic = ({ students, topicSlug, topics }: ITopicProps) => {\n  if (!students || !topicSlug) {\n    return <div>Loading...</div>;\n  }\n\n  const studentsWithTopic = students.filter(({ topics }) =>\n    topics.some(({ slug }) => slug === topicSlug)\n  );\n\n  const topicName = topics[topicSlug];\n\n  return (\n    <div>\n      <h2>Projects with Topic {topicName}:</h2>\n      <StudentCards students={studentsWithTopic} />\n    </div>\n  );\n};\n\nexport default Topic;\n","import React from \"react\";\nimport svg20 from \"../images/20.svg\";\n\nconst HeaderBG = () => (\n  <div id=\"header2020-bg\">\n    <div id=\"header2020-bg-animation\" />\n    <h1 className=\"position-absolute\">ITP Thesis Archive</h1>\n    <img\n      id=\"header-invisible-height\"\n      src={svg20}\n      alt=\"invisible to give background correct height\"\n    />\n  </div>\n);\n\nexport default HeaderBG;\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Link } from \"@reach/router\";\nimport HeaderBG from \"./HeaderBG\";\n\nconst Header = () => (\n  <>\n    <HeaderBG />\n    <div className=\"sticky-top bg-white border-top border-bottom\">\n      <Navbar>\n        <Navbar.Brand>Thesis Archive 2020</Navbar.Brand>\n        <Nav fill variant=\"tabs\">\n          <Nav.Item>\n            <Link to=\"/\" className=\"nav-link\">\n              Students\n            </Link>{\" \"}\n          </Nav.Item>\n          <Nav.Item>\n            <Link to=\"/videos\" className=\"nav-link\">\n              Videos\n            </Link>{\" \"}\n          </Nav.Item>\n        </Nav>\n      </Navbar>\n    </div>\n  </>\n);\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport { IStudentDetails } from \"./types\";\nimport { getVideoIdFromUrl } from \"./util/queries\";\nimport * as api from \"./util/api\";\nimport VimeoEmbed from \"./VimeoEmbed\";\n\nconst VideoDetail = ({ student }: { student: IStudentDetails }) => (\n  <div>\n    <h3>{student.student_name}</h3>\n    <VimeoEmbed\n      vimeoVideoId={getVideoIdFromUrl(student.video_presentation_url)}\n    />\n  </div>\n);\n\nconst Video = ({ studentId }: { studentId?: string }) => {\n  const [student, setStudent] = useState<IStudentDetails>();\n\n  useEffect(() => {\n    async function fetchStudent() {\n      if (!studentId) return;\n      const student = await api.getStudent(studentId);\n      setStudent(student);\n    }\n    fetchStudent();\n  }, [studentId]);\n\n  if (!student) return <div>Loading...</div>;\n\n  return <VideoDetail student={student} />;\n};\n\nexport default Video;\n","import React, { useEffect, useState } from \"react\";\nimport { RouteComponentProps, Link } from \"@reach/router\";\nimport { Row, Col } from \"react-bootstrap\";\n\nimport { schedule } from \"./scrapedSchedules/schedule-2018.json\";\nimport {\n  VideoScheduleRowContents,\n  VideoScheduleStudent,\n  IStudentSummary,\n} from \"./types\";\nimport { getStudentIdFromSlug, selectRandom } from \"./util/queries\";\nimport Video from \"./Video\";\nimport cx from \"classnames\";\n\nconst VideoCell = ({\n  student,\n  activeSlug,\n}: {\n  student: VideoScheduleStudent | undefined;\n  activeSlug?: string;\n}) => (\n  <Col md={2}>\n    {student && (\n      <Link\n        to={`/videos/${student.slug}`}\n        className={cx(\"badge\", {\n          \"badge-primary\": activeSlug === student.slug,\n        })}\n      >\n        {student.name}\n      </Link>\n    )}\n  </Col>\n);\n\nconst videoScheduleRows = schedule as VideoScheduleRowContents[];\n\nconst Schedule = ({ studentSlug }: { studentSlug: string | undefined }) => (\n  <div>\n    <Row>\n      <Col md={2}>Time</Col>\n      <Col md={2}>Tuesday</Col>\n      <Col md={2}>Wednesday</Col>\n      <Col md={2}>Thursday</Col>\n      <Col md={2}>Friday</Col>\n    </Row>\n    {videoScheduleRows.map((row) => (\n      <Row key={row.time}>\n        <Col md={2}>{row.time}</Col>\n        <VideoCell student={row.tuesday} activeSlug={studentSlug} />\n        <VideoCell student={row.wednesday} activeSlug={studentSlug} />\n        <VideoCell student={row.thursday} activeSlug={studentSlug} />\n        <VideoCell student={row.friday} activeSlug={studentSlug} />\n      </Row>\n    ))}\n  </div>\n);\n\ninterface IVideosProps {\n  studentSlug?: string;\n  studentId?: string;\n}\n\nconst Videos = ({ studentSlug, studentId }: IVideosProps) => (\n  <Row>\n    <Col md={7}>\n      <Video studentId={studentId} />\n    </Col>\n    <Col md={5}>\n      <Schedule studentSlug={studentSlug} />\n    </Col>\n  </Row>\n);\n\ninterface IVideosContainerProps extends RouteComponentProps {\n  students: IStudentSummary[] | undefined;\n  studentSlug?: string;\n}\n\nconst VideosContainer = ({ studentSlug, students }: IVideosContainerProps) => {\n  const [activeSlug, setActiveSlug] = useState<string>();\n  const [studentId, setStudentId] = useState<string>();\n\n  useEffect(() => {\n    if (activeSlug) {\n      if (studentSlug && studentSlug !== activeSlug) {\n        setActiveSlug(studentSlug);\n      }\n    }\n    if (!activeSlug) {\n      if (studentSlug) {\n        setActiveSlug(studentSlug);\n      } else if (students) {\n        const randomStudent = selectRandom(students);\n        setActiveSlug(randomStudent.student_slug);\n      }\n    }\n  }, [studentSlug, activeSlug, students]);\n\n  useEffect(() => {\n    async function fetchStudentId() {\n      if (students && activeSlug) {\n        const studentId = getStudentIdFromSlug(students, activeSlug);\n        setStudentId(studentId);\n      }\n    }\n    fetchStudentId();\n  }, [activeSlug, students]);\n\n  return <Videos studentSlug={activeSlug} studentId={studentId} />;\n};\n\nexport default VideosContainer;\n","import React, { useEffect, useState } from \"react\";\nimport * as api from \"./util/api\";\nimport \"popper.js/dist/umd/popper.js\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport \"./scss/styles.scss\";\nimport \"./App.css\";\nimport \"normalize.css\";\nimport Home from \"./Home\";\nimport Student from \"./Student\";\nimport Topic from \"./Topic\";\nimport { Router } from \"@reach/router\";\nimport * as queries from \"./util/queries\";\nimport { IStudentSummary } from \"./types\";\nimport Header from \"./components/Header\";\nimport Videos from \"./Videos\";\n\ninterface IAppProps {\n  students: IStudentSummary[] | undefined;\n}\n\nconst App = ({ students }: IAppProps) => {\n  const topics = students ? queries.getTopics(students) : {};\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <Router>\n          <Home path=\"/\" students={students} topics={topics} />\n          <Student path=\"students/:studentIdOrSlug\" students={students} />\n          <Topic path=\"topics/:topicSlug\" students={students} topics={topics} />\n          <Videos path=\"videos\" students={students} />\n          <Videos path=\"videos/:studentSlug\" students={students} />\n        </Router>\n      </div>\n    </>\n  );\n};\n\nconst AppContainer = () => {\n  const [students, setStudents] = useState<IStudentSummary[]>();\n\n  useEffect(() => {\n    async function fetchAllStudents() {\n      const students = await api.getAllStudents();\n      setStudents(students);\n    }\n    fetchAllStudents();\n  });\n\n  return <App students={students} />;\n};\n\nexport default AppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/20.2ee662c7.svg\";"],"sourceRoot":""}